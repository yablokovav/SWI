fix = true
line-length = 120
output-format = "concise"
preview = true
show-fixes = true
target-version = "py310"

[format]
docstring-code-format = true

[lint]
logger-objects = ["loguru.logger"]
select = ["ALL"]
external = ["WPS"]

ignore = [
    "CPY001", # ignore missing copyright notice
    "D", # ignore missing docstrings
    "DOC201",
    "DOC402",
    "DOC501", # ignore missing Return docstring section
    "TD002",
    "TD003", # allow TODOs without author and issue link
    "FIX002", # allow TODOs
    "FA100", # do not suggest `from __future__ import annotations`
    "UP006",
    "UP007",
    "UP038", # allow old-style `typing` module
    "ANN401", # allow `typing.Any`
    "G004", # logging statement uses f-string
    "EM", # allow f-strings in error messages
    "TRY003", # allow long error messages outside the exception class
    "FBT001",
    "FBT002", # allow boolean default positional argument in function definition
    "PLR2004", # allow 0-10 magic numbers
    "PLW2901", # allow loop variable to be overwritten
    "PERF403", # false positive dictionary comprehension usage
    "ASYNC109", # allow timeout in async function definition
    "PLW1514", # allow missing `open()` encoding
    "PLC0415", # allow imports not at the top of the file
    "PYI036", # star-args in `__aexit__` should be annotated with `object`
    "ISC001", # allow implicit string concatenation to avoid conflicts with `ruff format`
    "COM812", # allow missing trailing comma to avoid conflicts with `ruff format`
	"RUF003",
	"NPY002",
]

[lint.pydocstyle]
convention = "google"

[lint.isort]
split-on-trailing-comma = false

[lint.mccabe]
max-complexity = 7

[lint.pylint]
max-args = 13

[lint.flake8-builtins]
builtins-allowed-modules = ["logging", "types"]

[lint.per-file-ignores]
"__init__.py" = ["F401"]

"*.ipynb" = [
    "S101", # allow use of `assert`
    "T201", # allow `print` statements
    "ERA001", # allow commented-out code
    "PLE1142", # allow `await` outside an async function
    "N814", # allow to import `fiftyone.ViewField` as `F`
]
